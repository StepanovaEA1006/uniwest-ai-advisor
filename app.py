# app.py - –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –° –£–õ–£–ß–®–ï–ù–ù–´–ú –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï–ú –ü–û–î–ü–ò–°–û–ö

import streamlit as st
import pandas as pd
import numpy as np
import plotly.graph_objects as go
import plotly.express as px
from datetime import datetime
import hashlib

# –ò–ú–ü–û–†–¢–ò–†–£–ï–ú –§–£–ù–ö–¶–ò–ò –ò–ó database.py
from database import (
    get_all_clients, 
    get_client_details, 
    get_portfolio_by_client, 
    generate_subscription_based_recommendations,  # –ò–°–ü–û–õ–¨–ó–£–ï–ú –û–ë–ù–û–í–õ–ï–ù–ù–£–Æ –§–£–ù–ö–¶–ò–Æ
    get_subscription_level,
    get_subscription_details,  # –î–û–ë–ê–í–ò–õ–ò –≠–¢–£ –§–£–ù–ö–¶–ò–Æ
    can_access_advanced_analytics,
    can_access_premium_features,
    SUBSCRIPTION_FEATURES
)

# –ò–º–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è
from advanced_analysis import AdvancedPortfolioAnalysis, display_portfolio_analysis

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Streamlit
st.set_page_config(
    page_title="–Æ–Ω–∏–í–µ—Å—Ç - AI –°–æ–≤–µ—Ç–Ω–∏–∫ –ø–æ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

def hash_password(password):
    """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è"""
    return hashlib.sha256(password.encode()).hexdigest()

def init_session_state():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏"""
    if 'authenticated' not in st.session_state:
        st.session_state.authenticated = False
    if 'current_user' not in st.session_state:
        st.session_state.current_user = None
    if 'current_page' not in st.session_state:
        st.session_state.current_page = "üìä –î–∞—à–±–æ—Ä–¥"

def display_subscription_badge(subscription_level: str) -> str:
    """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –±–µ–π–¥–∂ –ø–æ–¥–ø–∏—Å–∫–∏"""
    badges = {
        'trial': 'üéÅ <span style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 4px 12px; border-radius: 20px; font-size: 0.8em; font-weight: bold;">–ü–†–û–ë–ù–´–ô</span>',
        'basic': 'üìä <span style="background: linear-gradient(135deg, #11998e, #38ef7d); color: white; padding: 4px 12px; border-radius: 20px; font-size: 0.8em; font-weight: bold;">–ë–ê–ó–û–í–´–ô</span>',
        'advanced': 'üéØ <span style="background: linear-gradient(135deg, #fc466b, #3f5efb); color: white; padding: 4px 12px; border-radius: 20px; font-size: 0.8em; font-weight: bold;">–ü–†–û–î–í–ò–ù–£–¢–´–ô</span>',
        'premium': 'üíé <span style="background: linear-gradient(135deg, #ffd700, #ff8c00); color: black; padding: 4px 12px; border-radius: 20px; font-size: 0.8em; font-weight: bold;">–ü–†–ï–ú–ò–£–ú</span>'
    }
    return badges.get(subscription_level, badges['trial'])

def login_page():
    """–ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –° –ò–ù–§–û–†–ú–ê–¶–ò–ï–ô –û –ü–û–î–ü–ò–°–ö–ê–•"""
    st.markdown("""
    <style>
        .login-container {
            max-width: 90%;
            width: 400px;
            margin: 10vh auto;
            padding: 2rem;
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            text-align: center;
        }
        .main-title {
            font-size: clamp(2rem, 5vw, 2.8rem);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
            font-weight: bold;
        }
        .subtitle {
            color: #666;
            margin-bottom: 2rem;
            font-size: clamp(1rem, 3vw, 1.2rem);
        }
        .client-option {
            padding: 0.5rem;
            margin: 0.5rem 0;
            border-radius: 10px;
            border: 1px solid #e0e0e0;
        }
        .client-option:hover {
            background: #f8f9fa;
        }
        
        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */
        @media (max-width: 768px) {
            .login-container {
                margin: 5vh auto;
                padding: 1.5rem;
                width: 85%;
            }
        }
    </style>
    """, unsafe_allow_html=True)
    
    st.markdown("""
    <div style='display: flex; justify-content: center; align-items: center; min-height: 80vh; padding: 1rem;'>
        <div class="login-container">
            <h1 class="main-title">ü§ñ –Æ–Ω–∏–í–µ—Å—Ç</h1>
            <div class="subtitle">AI –°–æ–≤–µ—Ç–Ω–∏–∫ –ø–æ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º</div>
    """, unsafe_allow_html=True)
    
    clients = get_all_clients()
    
    # –°–æ–∑–¥–∞–µ–º –æ–ø—Ü–∏–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–ø–∏—Å–∫–µ
    client_options = []
    for client in clients:
        subscription = get_subscription_level(client)
        subscription_details = get_subscription_details(client)
        badge = display_subscription_badge(subscription)
        client_options.append({
            'name': client,
            'subscription': subscription,
            'badge': badge,
            'price': subscription_details['price']
        })
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∏—Ö –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
    selected_client = st.selectbox(
        "üë§ –í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞:",
        clients,
        format_func=lambda x: f"{x} - {get_subscription_details(x)['name']} ({get_subscription_details(x)['price']} —Ä—É–±/–º–µ—Å)",
        index=0
    )
    
    password = st.text_input("üîí –ü–∞—Ä–æ–ª—å:", type="password", value="demo123")
    
    if st.button("üöÄ –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É", use_container_width=True, type="primary"):
        if password == "demo123":
            st.session_state.authenticated = True
            st.session_state.current_user = selected_client
            st.rerun()
        else:
            st.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'demo123'")
    
    st.markdown("""
            <div style="margin-top: 2rem; padding: 1rem; background: #f8f9fa; border-radius: 10px;">
                <p style="margin: 0; font-size: 0.9rem;"><strong>üí° –î–µ–º–æ-–¥–æ—Å—Ç—É–ø:</strong> –ü–∞—Ä–æ–ª—å: <code>demo123</code></p>
                <p style="margin: 0.5rem 0 0 0; font-size: 0.8rem; color: #666;">–ö–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç –∏–º–µ–µ—Ç —Ä–∞–∑–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–∫–∏</p>
            </div>
        </div>
    </div>
    """, unsafe_allow_html=True)

def create_portfolio_metrics(client_data, portfolio_dict):
    """–°–æ–∑–¥–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    portfolio_type = client_data['portfolio_type']
    
    metrics_map = {
        '–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π': {'expected_return': 0.18, 'volatility': 0.32, 'sharpe_ratio': 0.56, 'max_drawdown': -0.40},
        '—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π': {'expected_return': 0.095, 'volatility': 0.14, 'sharpe_ratio': 0.68, 'max_drawdown': -0.20},
        '–¥–æ—Ö–æ–¥–Ω—ã–π': {'expected_return': 0.078, 'volatility': 0.11, 'sharpe_ratio': 0.71, 'max_drawdown': -0.15},
        '—É–ª—å—Ç—Ä–∞-–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π': {'expected_return': 0.045, 'volatility': 0.05, 'sharpe_ratio': 0.90, 'max_drawdown': -0.08}
    }
    
    return metrics_map.get(portfolio_type, metrics_map['—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π'])

def create_growth_chart(client_data, portfolio_type, current_client):
    """–°–æ–∑–¥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —Ä–æ—Å—Ç–∞"""
    dates = pd.date_range(start='2021-01-01', end='2024-01-01', freq='M')
    
    returns_map = {
        '–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π': {'mean': 0.015, 'std': 0.08},
        '—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π': {'mean': 0.008, 'std': 0.04},
        '–¥–æ—Ö–æ–¥–Ω—ã–π': {'mean': 0.006, 'std': 0.03},
        '—É–ª—å—Ç—Ä–∞-–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π': {'mean': 0.004, 'std': 0.02}
    }
    
    return_profile = returns_map.get(portfolio_type, returns_map['—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π'])
    seed = sum(ord(c) for c in current_client)
    np.random.seed(seed)
    
    monthly_returns = np.random.normal(return_profile['mean'], return_profile['std'], len(dates))
    initial = client_data['initial_investment']
    values = [initial]
    
    for ret in monthly_returns:
        values.append(values[-1] * (1 + ret))
    
    return dates, values[1:], initial

def display_subscription_status(client_name: str):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    subscription_level = get_subscription_level(client_name)
    subscription_details = get_subscription_details(client_name)
    
    st.sidebar.markdown("---")
    st.sidebar.subheader("üíé –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞")
    
    # –ë–µ–π–¥–∂ –ø–æ–¥–ø–∏—Å–∫–∏
    badge_html = display_subscription_badge(subscription_level)
    st.sidebar.markdown(f"<div style='text-align: center; margin-bottom: 1rem;'>{badge_html}</div>", unsafe_allow_html=True)
    
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Ä–æ–≤–Ω—è –ø–æ–¥–ø–∏—Å–∫–∏
    levels = ['trial', 'basic', 'advanced', 'premium']
    current_index = levels.index(subscription_level) if subscription_level in levels else 0
    
    progress = (current_index + 1) / len(levels)
    st.sidebar.progress(progress)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Ç–∞—Ä–∏—Ñ–µ
    st.sidebar.write(f"**–¢–∞—Ä–∏—Ñ:** {subscription_details['name']}")
    st.sidebar.write(f"**–°—Ç–æ–∏–º–æ—Å—Ç—å:** {subscription_details['price']} —Ä—É–±/–º–µ—Å")
    st.sidebar.write(f"**–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:** {subscription_details['expires']}")
    
    # –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    st.sidebar.markdown("**–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**")
    features = SUBSCRIPTION_FEATURES[subscription_level]['features']
    for feature in features[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ñ—É–Ω–∫—Ü–∏–∏
        st.sidebar.write(f"‚Ä¢ {feature}")
    
    # –ö–Ω–æ–ø–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ –ø—Ä–µ–º–∏—É–º
    if subscription_level != 'premium':
        st.sidebar.markdown("---")
        next_level = levels[current_index + 1] if current_index < len(levels) - 1 else 'premium'
        next_sub_info = SUBSCRIPTION_FEATURES.get(next_level, {})
        
        if st.sidebar.button(f"üöÄ –£–ª—É—á—à–∏—Ç—å –¥–æ {next_sub_info.get('name', '–ü—Ä–µ–º–∏—É–º')}", use_container_width=True):
            st.session_state.current_page = "üíé –¢–∞—Ä–∏—Ñ—ã"
            st.rerun()

def show_feature_unlock_prompt(feature_name: str, required_level: str, client_name: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–º—Ç –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏"""
    current_level = get_subscription_level(client_name)
    required_plan = SUBSCRIPTION_FEATURES[required_level]
    
    st.warning(f"üîí **{feature_name} –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Ç–∞—Ä–∏—Ñ–µ {required_plan['name']}**")
    
    col1, col2 = st.columns([3, 1])
    
    with col1:
        st.write(f"**–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:**")
        for feature in required_plan['features'][:3]:
            st.write(f"‚Ä¢ {feature}")
        
        if 'upgrade_reason' in required_plan:
            st.info(f"üí° {required_plan['upgrade_reason']}")
    
    with col2:
        if st.button(f"üí≥ {required_plan['price']}‚ÇΩ/–º–µ—Å", key=f"unlock_{feature_name}"):
            st.session_state.current_page = "üíé –¢–∞—Ä–∏—Ñ—ã"
            st.rerun()

def display_pricing_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º —Ç–∞—Ä–∏—Ñ–æ–≤"""
    st.markdown("""
    <style>
    .pricing-card {
        background: white;
        border-radius: 15px;
        padding: 2rem;
        margin: 1rem 0;
        border: 2px solid #e0e0e0;
        transition: all 0.3s ease;
        height: 100%;
    }
    .pricing-card:hover {
        border-color: #1f77b4;
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }
    .pricing-card.premium {
        border-color: #ffd700;
        background: linear-gradient(135deg, #fffaf0, #fffde7);
    }
    .feature-list {
        margin: 1rem 0;
    }
    .feature-item {
        margin: 0.5rem 0;
        display: flex;
        align-items: center;
    }
    .price-tag {
        font-size: 2rem;
        font-weight: bold;
        color: #1f77b4;
        margin: 1rem 0;
    }
    </style>
    """, unsafe_allow_html=True)
    
    st.title("üíé –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ")
    st.write("–ù–∞—á–Ω–∏—Ç–µ —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –∏ —É–ª—É—á—à–∞–π—Ç–µ –ø–æ –º–µ—Ä–µ —Ä–æ—Å—Ç–∞ –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Ç–∞—Ä–∏—Ñ–æ–≤
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        display_pricing_card('trial')
    with col2:
        display_pricing_card('basic')
    with col3:
        display_pricing_card('advanced')
    with col4:
        display_pricing_card('premium')

def display_pricing_card(level: str):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É —Ç–∞—Ä–∏—Ñ–∞"""
    plan = SUBSCRIPTION_FEATURES[level]
    
    st.markdown(f"""
    <div class="pricing-card {'premium' if level == 'premium' else ''}">
        <h3>{plan['name']}</h3>
        <div class="price-tag">{plan['price']}‚ÇΩ</div>
        <p>/–º–µ—Å—è—Ü</p>
    """, unsafe_allow_html=True)
    
    # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
    if level == 'trial':
        st.button("üéÅ –ù–∞—á–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥", key=f"btn_{level}", use_container_width=True)
    else:
        st.button(f"üí≥ –í—ã–±—Ä–∞—Ç—å {plan['name']}", key=f"btn_{level}", use_container_width=True,
                type="primary" if level == 'premium' else "secondary")
    
    # –°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π
    st.markdown("<div class='feature-list'>", unsafe_allow_html=True)
    for feature in plan['features'][:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ñ—É–Ω–∫—Ü–∏–π
        st.markdown(f"<div class='feature-item'>‚úÖ {feature}</div>", unsafe_allow_html=True)
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è trial –∏ basic
    if 'limitations' in plan:
        st.markdown("---")
        for limitation in plan['limitations'][:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
            st.markdown(f"<div class='feature-item'>{limitation}</div>", unsafe_allow_html=True)
    
    st.markdown("</div></div>", unsafe_allow_html=True)

def advanced_analytics_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    current_client = st.session_state.current_user
    
    st.title("üìà –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    if not can_access_advanced_analytics(current_client):
        show_feature_unlock_prompt("–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "advanced", current_client)
        return
    
    st.success(f"üéØ –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–µ!")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
    client_data = get_client_details(current_client)
    portfolio_dict = get_portfolio_by_client(current_client)
    
    if not portfolio_dict:
        st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    with st.spinner("üîç –ü—Ä–æ–≤–æ–¥–∏–º —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è..."):
        analyzer = AdvancedPortfolioAnalysis(portfolio_dict, current_client)
        results = analyzer.comprehensive_analysis()
    
    if results:
        display_portfolio_analysis(results)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏
        if can_access_premium_features(current_client):
            st.markdown("---")
            st.subheader("üíé –ü—Ä–µ–º–∏—É–º –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
            
            col1, col2 = st.columns(2)
            
            with col1:
                st.info("""
                **ü§ñ AI –ü—Ä–æ–≥–Ω–æ–∑—ã:**
                - –û–∂–∏–¥–∞–µ–º—ã–π —Ä–æ—Å—Ç: +4.5% –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ
                - –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 78%
                - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –î–µ—Ä–∂–∞—Ç—å –ø–æ–∑–∏—Ü–∏–∏
                """)
            
            with col2:
                st.info("""
                **üèÜ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —ç—Ç–∞–ª–æ–Ω–∞–º–∏:**
                - –í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å: +15.2%
                - S&P 500: +12.1% 
                - Nasdaq: +18.3%
                - –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —ç—Ç–∞–ª–æ–Ω–∞: ‚úÖ
                """)

def dashboard_page():
    """–ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –° –£–õ–£–ß–®–ï–ù–ù–´–ú –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï–ú –ü–û–î–ü–ò–°–û–ö"""
    
    # –ê–î–ê–ü–¢–ò–í–ù–´–ï –°–¢–ò–õ–ò –î–õ–Ø –í–°–ï–• –£–°–¢–†–û–ô–°–¢–í
    st.markdown("""
    <style>
        /* –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */
        .stApp {
            background-color: #ffffff !important;
        }
        
        body, p, div, h1, h2, h3, h4, h5, h6, span, li, strong, em {
            color: #000000 !important;
        }
        
        /* –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ */
        .main-header {
            font-size: clamp(1.8rem, 4vw, 2.5rem) !important;
            color: #1f77b4 !important;
            text-align: center;
            margin-bottom: 1rem;
            font-weight: bold;
        }
        
        .section-header {
            font-size: clamp(1.3rem, 3vw, 1.8rem) !important;
            margin: 1.5rem 0 1rem 0 !important;
        }
        
        /* –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */
        .client-card {
            background: #ffffff !important;
            color: #000000 !important;
            padding: clamp(1rem, 3vw, 2rem) !important;
            border-radius: 15px;
            margin: 1rem 0;
            border: 2px solid #1f77b4;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .metric-card {
            background: #f8f9fa !important;
            color: #000000 !important;
            padding: clamp(0.8rem, 2vw, 1rem) !important;
            border-radius: 10px;
            border-left: 4px solid #1f77b4;
            margin: 0.5rem 0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .premium-feature {
            background: linear-gradient(135deg, #fffaf0, #fffde7) !important;
            border-left: 4px solid #ffd700 !important;
        }
        
        .restricted-feature {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef) !important;
            border-left: 4px solid #6c757d !important;
            opacity: 0.7;
        }
        
        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */
        div.stButton > button[kind="secondary"] {
            background-color: #f8f9fa !important;
            color: #000000 !important;
            border: 1px solid #dee2e6 !important;
            font-weight: 500;
            font-size: clamp(0.8rem, 2vw, 1rem) !important;
        }
        
        /* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */
        @media (max-width: 768px) {
            /* –£–ø—Ä–æ—â–∞–µ–º —Ö–µ–¥–µ—Ä –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
            .mobile-header {
                flex-direction: column !important;
                gap: 0.5rem !important;
            }
            
            /* –£–º–µ–Ω—å—à–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã */
            .client-card {
                margin: 0.5rem 0 !important;
            }
            
            /* –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º sidebar */
            .sidebar-content {
                font-size: 0.9rem !important;
            }
            
            /* –£–ª—É—á—à–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã */
            .dataframe {
                font-size: 0.8rem !important;
            }
        }
        
        /* –ü–ª–∞–Ω—à–µ—Ç—ã */
        @media (min-width: 769px) and (max-width: 1024px) {
            .client-card {
                padding: 1.5rem !important;
            }
        }
        
        /* –°–∫—Ä—ã–≤–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
        @media (max-width: 480px) {
            .hide-on-mobile {
                display: none !important;
            }
        }
    </style>
    """, unsafe_allow_html=True)
    
    current_client = st.session_state.current_user
    client_data = get_client_details(current_client)
    portfolio_dict = get_portfolio_by_client(current_client)
    
    if not client_data or not portfolio_dict:
        st.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –û–¢–õ–ê–î–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø - –î–û–ë–ê–í–ò–õ–ò –≠–¢–û–¢ –ë–õ–û–ö
    st.sidebar.markdown("---")
    st.sidebar.subheader("üîß –û—Ç–ª–∞–¥–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫")
    subscription_level = get_subscription_level(current_client)
    subscription_details = get_subscription_details(current_client)
    st.sidebar.write(f"**–ö–ª–∏–µ–Ω—Ç:** {current_client}")
    st.sidebar.write(f"**–£—Ä–æ–≤–µ–Ω—å:** {subscription_level}")
    st.sidebar.write(f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** {subscription_details['name']}")
    st.sidebar.write(f"**–¶–µ–Ω–∞:** {subscription_details['price']} —Ä—É–±")
    st.sidebar.write(f"**Advanced –¥–æ—Å—Ç—É–ø:** {can_access_advanced_analytics(current_client)}")
    st.sidebar.write(f"**Premium –¥–æ—Å—Ç—É–ø:** {can_access_premium_features(current_client)}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞
    has_advanced_access = can_access_advanced_analytics(current_client)
    has_premium_access = can_access_premium_features(current_client)
    subscription_level = get_subscription_level(current_client)
    subscription_details = get_subscription_details(current_client)
    
    # –ë–µ–π–¥–∂ –ø–æ–¥–ø–∏—Å–∫–∏
    badge_html = display_subscription_badge(subscription_level)
    
    # –ê–î–ê–ü–¢–ò–í–ù–´–ô –•–ï–î–ï–† –° –ë–ï–ô–î–ñ–ï–ú –ü–û–î–ü–ò–°–ö–ò
    st.markdown(f'''
    <div class="main-header">
        ü§ñ –Æ–Ω–∏–í–µ—Å—Ç - AI –°–æ–≤–µ—Ç–Ω–∏–∫ 
        <div style="display: inline-block; margin-left: 10px;">
            {badge_html}
        </div>
    </div>
    ''', unsafe_allow_html=True)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    col1, col2, col3 = st.columns([2, 1, 1])
    
    with col1:
        st.markdown(f'<div class="user-info">üë§ <strong>{current_client}</strong></div>', unsafe_allow_html=True)
    
    with col2:
        st.metric("–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", f"{client_data['initial_investment']:,.0f} ‚ÇΩ")
    
    with col3:
        if st.button("üö™ –í—ã–π—Ç–∏", use_container_width=True, type="secondary"):
            st.session_state.authenticated = False
            st.session_state.current_user = None
            st.rerun()
    
    st.markdown("---")
    
    # –ê–î–ê–ü–¢–ò–í–ù–´–ô SIDEBAR
    with st.sidebar:
        st.title("üéØ –ù–∞–≤–∏–≥–∞—Ü–∏—è")
        
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        page = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", 
                       ["üìä –î–∞—à–±–æ—Ä–¥", "üìà –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", "üíé –¢–∞—Ä–∏—Ñ—ã"],
                       index=0)
        
        if page != st.session_state.current_page:
            st.session_state.current_page = page
            st.rerun()
        
        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        st.markdown("---")
        clients = get_all_clients()
        new_user = st.selectbox("üë• –í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞:", clients, 
                              index=clients.index(current_client))
        
        if new_user != current_client:
            st.session_state.current_user = new_user
            st.rerun()
        
        st.markdown("---")
        
        # –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è
        st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        col1, col2 = st.columns(2)
        with col1:
            st.metric("–ê–∫—Ç–∏–≤—ã", len(portfolio_dict))
        with col2:
            st.metric("–†–∏—Å–∫", client_data['risk_profile'])
        
        # –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        display_subscription_status(current_client)
        
        st.markdown("---")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ AI - –ò–°–ü–†–ê–í–ò–õ–ò –ó–î–ï–°–¨: –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
        st.subheader("ü§ñ –°–æ–≤–µ—Ç—ã")
        recommendations = generate_subscription_based_recommendations(current_client)
        for rec in recommendations[:2]:  # –ú–µ–Ω—å—à–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
            st.info(rec)
    
    # –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢ - –ê–î–ê–ü–¢–ò–í–ù–´–ô
    
    # 1. –ü—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –° –î–ï–¢–ê–õ–¨–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ï–ô –û –ü–û–î–ü–ò–°–ö–ï
    st.markdown(f"""
    <div class="client-card">
        <h2>üë§ {current_client} {badge_html}</h2>
        <p><em>{client_data['description']}</em></p>
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem; margin-top: 1rem;">
            <div>
                <p><strong>üíº –¢–∏–ø –ø–æ—Ä—Ç—Ñ–µ–ª—è:</strong> {client_data['portfolio_type']}</p>
                <p><strong>üéØ –¶–µ–ª—å:</strong> {client_data['financial_goals']}</p>
                <p><strong>üí∞ –¶–µ–ª—å:</strong> {client_data['target_amount']:,.0f} ‚ÇΩ</p>
                <p><strong>üíé –ü–æ–¥–ø–∏—Å–∫–∞:</strong> {subscription_details['name']}</p>
            </div>
            <div>
                <p><strong>‚ö° –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:</strong> {client_data['risk_profile']}</p>
                <p><strong>üí™ –û–ø—ã—Ç:</strong> {client_data['experience']}</p>
                <p><strong>üìÖ –ì–æ—Ä–∏–∑–æ–Ω—Ç:</strong> {client_data['investment_horizon']}</p>
                <p><strong>üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:</strong> {subscription_details['price']} —Ä—É–±/–º–µ—Å</p>
            </div>
        </div>
        <div style="margin-top: 1rem; padding: 1rem; background: #f8f9fa; border-radius: 10px;">
            <p><strong>üöÄ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</strong></p>
            <p>{'üíé AI-–ø—Ä–æ–≥–Ω–æ–∑—ã –∏ –ø—Ä–µ–º–∏—É–º –∞–Ω–∞–ª–∏—Ç–∏–∫–∞' if has_premium_access else 'üéØ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è' if has_advanced_access else 'üìä –ë–∞–∑–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'}</p>
        </div>
    </div>
    """, unsafe_allow_html=True)
    
    # 2. –û–±–∑–æ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
    st.markdown('<div class="section-header">üìä –û–±–∑–æ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è</div>', unsafe_allow_html=True)
    
    # –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞, –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è
    if st.checkbox("üì± –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤–∏–¥", value=False, help="–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤"):
        # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        st.subheader("üçï –°–æ—Å—Ç–∞–≤ –ø–æ—Ä—Ç—Ñ–µ–ª—è")
        weights_df = pd.DataFrame(list(portfolio_dict.items()), columns=['–ê–∫—Ç–∏–≤', '–î–æ–ª—è'])
        
        fig_pie = px.pie(weights_df, values='–î–æ–ª—è', names='–ê–∫—Ç–∏–≤', 
                        color_discrete_sequence=px.colors.sequential.RdBu, hole=0.3)
        fig_pie.update_traces(textposition='inside', textinfo='percent+label')
        fig_pie.update_layout(showlegend=False, height=300)
        st.plotly_chart(fig_pie, use_container_width=True)
        
        # –î–µ—Ç–∞–ª–∏ –∞–∫—Ç–∏–≤–æ–≤ –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º –≤–∏–¥–µ
        st.subheader("üìà –î–µ—Ç–∞–ª–∏ –∞–∫—Ç–∏–≤–æ–≤")
        sorted_assets = sorted(portfolio_dict.items(), key=lambda x: x[1], reverse=True)
        
        for asset, weight in sorted_assets:
            investment = client_data['initial_investment'] * weight
            st.markdown(f"""
            <div class="metric-card">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <strong>{asset}</strong>
                    <span>{weight:.1%} ‚Ä¢ {investment:,.0f} ‚ÇΩ</span>
                </div>
            </div>
            """, unsafe_allow_html=True)
    else:
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
        col1, col2 = st.columns([1, 2])
        
        with col1:
            st.subheader("üçï –°–æ—Å—Ç–∞–≤ –ø–æ—Ä—Ç—Ñ–µ–ª—è")
            weights_df = pd.DataFrame(list(portfolio_dict.items()), columns=['–ê–∫—Ç–∏–≤', '–î–æ–ª—è'])
            
            fig_pie = px.pie(weights_df, values='–î–æ–ª—è', names='–ê–∫—Ç–∏–≤', 
                            color_discrete_sequence=px.colors.sequential.RdBu, hole=0.3)
            fig_pie.update_traces(textposition='inside', textinfo='percent+label')
            fig_pie.update_layout(showlegend=False, height=400)
            st.plotly_chart(fig_pie, use_container_width=True)
        
        with col2:
            st.subheader("üìà –î–µ—Ç–∞–ª–∏ –∞–∫—Ç–∏–≤–æ–≤")
            sorted_assets = sorted(portfolio_dict.items(), key=lambda x: x[1], reverse=True)
            
            assets_df = pd.DataFrame(sorted_assets, columns=['–ê–∫—Ç–∏–≤', '–î–æ–ª—è'])
            assets_df['–î–æ–ª—è'] = assets_df['–î–æ–ª—è'].apply(lambda x: f'{x:.1%}')
            assets_df['–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'] = assets_df['–î–æ–ª—è'].apply(
                lambda x: f"{client_data['initial_investment'] * float(x.strip('%'))/100:,.0f} ‚ÇΩ"
            )
            
            st.dataframe(assets_df, use_container_width=True, hide_index=True)
    
    # 3. –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –° –£–ß–ï–¢–û–ú –ü–û–î–ü–ò–°–ö–ò
    st.markdown('<div class="section-header">üîç –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏</div>', unsafe_allow_html=True)
    
    portfolio_metrics = create_portfolio_metrics(client_data, portfolio_dict)
    key_metrics = client_data.get('key_metrics', {})
    
    # –ë–∞–∑–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω—ã)
    cols = st.columns(2)
    with cols[0]:
        st.metric("–û–∂–∏–¥–∞–µ–º–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å", f"{key_metrics.get('expected_return', portfolio_metrics['expected_return']):.2%}")
        st.metric("–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å", f"{key_metrics.get('volatility', portfolio_metrics['volatility']):.2%}")
    
    with cols[1]:
        st.metric("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞", f"{key_metrics.get('sharpe_ratio', portfolio_metrics['sharpe_ratio']):.2f}")
        st.metric("–ú–∞–∫—Å. –ø—Ä–æ—Å–∞–¥–∫–∞", f"{portfolio_metrics['max_drawdown']:.1%}")
    
    # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è advanced+)
    if has_advanced_access:
        st.markdown('<div class="section-header">üéØ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–µ—Ç—Ä–∏–∫–∏</div>', unsafe_allow_html=True)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        with st.spinner("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∏—Å–∫–∏..."):
            analyzer = AdvancedPortfolioAnalysis(portfolio_dict, current_client)
            basic_results = analyzer.calculate_basic_metrics()
            risk_metrics = analyzer.calculate_risk_metrics()
        
        if basic_results and 'sortino_ratio' in basic_results:
            cols = st.columns(2)
            with cols[0]:
                st.metric("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –°–æ—Ä—Ç–∏–Ω–æ", f"{basic_results.get('sortino_ratio', 0):.2f}",
                         help="–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É downside —Ä–∏—Å–∫–∞")
            with cols[1]:
                st.metric("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ö–∞–ª–º–∞—Ä–∞", f"{basic_results.get('calmar_ratio', 0):.2f}",
                         help="–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ—Å–∞–¥–∫–µ")
        
        if risk_metrics and not risk_metrics.get('access_restricted', True):
            st.markdown('<div class="section-header">üìâ –ú–µ—Ç—Ä–∏–∫–∏ —Ä–∏—Å–∫–∞</div>', unsafe_allow_html=True)
            cols = st.columns(4)
            
            with cols[0]:
                st.metric("VaR (95%)", f"{risk_metrics.get('parametric_var', 0):.2%}")
            with cols[1]:
                st.metric("CVaR", f"{risk_metrics.get('cvar', 0):.2%}")
            with cols[2]:
                st.metric("Downside Dev", f"{risk_metrics.get('downside_deviation', 0):.2%}")
            with cols[3]:
                st.metric("Worst Day", f"{risk_metrics.get('worst_day', 0):.2%}")
    else:
        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–ª—É—á—à–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
        st.info("üîí **–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ —Ä–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ —Ç–∞—Ä–∏—Ñ–µ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π**")
        if st.button("üéØ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏ —Ä–∏—Å–∫–∞", key="unlock_metrics"):
            show_feature_unlock_prompt("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏", "advanced", current_client)
    
    # 4. –ì—Ä–∞—Ñ–∏–∫ —Ä–æ—Å—Ç–∞ - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π
    st.markdown('<div class="section-header">üìà –î–∏–Ω–∞–º–∏–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è</div>', unsafe_allow_html=True)
    
    try:
        dates, values, initial = create_growth_chart(client_data, client_data['portfolio_type'], current_client)
        
        df = pd.DataFrame({'–î–∞—Ç–∞': dates, '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è': values})
        fig = px.line(df, x='–î–∞—Ç–∞', y='–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è', 
                     title='', color_discrete_sequence=['#1f77b4'])
        fig.update_layout(
            xaxis_title="",
            yaxis_title="–°—Ç–æ–∏–º–æ—Å—Ç—å (‚ÇΩ)",
            hovermode='x unified',
            showlegend=False,
            height=300  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        )
        
        st.plotly_chart(fig, use_container_width=True)
        
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞: {e}")
    
    # 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ AI - –†–ê–ó–ù–´–ï –î–õ–Ø –†–ê–ó–ù–´–• –ü–û–î–ü–ò–°–û–ö - –ò–°–ü–†–ê–í–ò–õ–ò –ó–î–ï–°–¨: –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    st.markdown('<div class="section-header">ü§ñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ AI</div>', unsafe_allow_html=True)
    
    recommendations = generate_subscription_based_recommendations(current_client)
    
    for i, rec in enumerate(recommendations):
        # –†–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if "üîí" in rec or "üöÄ" in rec:
            card_class = "metric-card restricted-feature"
        elif "üíé" in rec:
            card_class = "metric-card premium-feature"
        elif "üéØ" in rec:
            card_class = "metric-card"
        else:
            card_class = "metric-card"
            
        st.markdown(f"""
        <div class="{card_class}">
            <strong>{rec}</strong>
        </div>
        """, unsafe_allow_html=True)
    
    # –ü—Ä–µ–º–∏—É–º —Å–µ–∫—Ü–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤)
    if has_premium_access:
        st.markdown('<div class="section-header">üíé –ü—Ä–µ–º–∏—É–º –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</div>', unsafe_allow_html=True)
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            <div class="metric-card premium-feature">
                <strong>ü§ñ AI –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –º–µ—Å—è—Ü</strong>
                <p>üìà –û–∂–∏–¥–∞–µ–º—ã–π —Ä–æ—Å—Ç: +4.5%</p>
                <p>üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: 78%</p>
                <p>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –î–µ—Ä–∂–∞—Ç—å –ø–æ–∑–∏—Ü–∏–∏</p>
            </div>
            """, unsafe_allow_html=True)
        
        with col2:
            st.markdown("""
            <div class="metric-card premium-feature">
                <strong>üèÜ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —ç—Ç–∞–ª–æ–Ω–∞–º–∏</strong>
                <p>‚úÖ –í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å: +15.2%</p>
                <p>üìä S&P 500: +12.1%</p>
                <p>üöÄ Nasdaq: +18.3%</p>
            </div>
            """, unsafe_allow_html=True)
    elif has_advanced_access:
        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–ª—É—á—à–∏—Ç—å –¥–æ –ø—Ä–µ–º–∏—É–º
        st.info("üíé **AI-–ø—Ä–æ–≥–Ω–æ–∑—ã –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —ç—Ç–∞–ª–æ–Ω–∞–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ü—Ä–µ–º–∏—É–º —Ç–∞—Ä–∏—Ñ–µ**")
        if st.button("üíé –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ü—Ä–µ–º–∏—É–º", key="upgrade_premium"):
            show_feature_unlock_prompt("AI-–ø—Ä–æ–≥–Ω–æ–∑—ã", "premium", current_client)
    
    # –§—É—Ç–µ—Ä
    st.markdown("---")
    st.markdown("""
    <div style='text-align: center; color: #666; font-size: 0.9rem;'>
        <p>ü§ñ –Æ–Ω–∏–í–µ—Å—Ç AI –°–æ–≤–µ—Ç–Ω–∏–∫ | –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</p>
        <p>–í–∞—à —Ç–∞—Ä–∏—Ñ: <strong>{subscription_details['name']}</strong> | –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å: <strong>{'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π' if subscription_level == 'premium' else '–ü—Ä–µ–º–∏—É–º' if subscription_level == 'advanced' else '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'}</strong></p>
    </div>
    """.format(subscription_details=subscription_details, subscription_level=subscription_level), unsafe_allow_html=True)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    init_session_state()
    
    # –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ü–ò–°–û–ö - –î–û–ë–ê–í–ò–õ–ò –≠–¢–û–¢ –ë–õ–û–ö
    if st.session_state.authenticated and not hasattr(st.session_state, 'subscription_tested'):
        current_client = st.session_state.current_user
        subscription_level = get_subscription_level(current_client)
        subscription_details = get_subscription_details(current_client)
        st.sidebar.success(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞: {subscription_details['name']} ({subscription_level})")
        st.session_state.subscription_tested = True
    
    if not st.session_state.authenticated:
        login_page()
    else:
        # –†–æ—É—Ç–∏–Ω–≥ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        if st.session_state.current_page == "üìä –î–∞—à–±–æ—Ä–¥":
            dashboard_page()
        elif st.session_state.current_page == "üìà –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞":
            advanced_analytics_page()
        elif st.session_state.current_page == "üíé –¢–∞—Ä–∏—Ñ—ã":
            display_pricing_page()

if __name__ == "__main__":
    main()

